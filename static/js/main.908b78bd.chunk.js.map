{"version":3,"sources":["logo.svg","Insurance/Score.js","Insurance/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Score","props","status","data","onSubmit","btnType","btnText","_ref2","_ref2$warnings","warnings","_ref2$result","result","_ref2$explain","explain","columns_warnings","console","log","suspiciousScore","scores","score","toFixed","suspicioussness","prediction","suspisiousLabel","badgeClassName","react_default","a","createElement","className","count","type","concat","map","key","idx","column","style","display","alignItems","justifyContent","dataToScore","width","role","Math","floor","abs","importance","aria-valuenow","aria-valuemin","aria-valuemax","onClick","alert","defaultProps","defaultRes","model_id","psi","avg_psi","classes_psi","code","min_examples_psi","label","messages","text","global_warnings","value","Insurance","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","objectSpread","defaultData","requestLoading","requestData","submit","bind","assertThisInitialized","e","_this2","preventDefault","_this$state","objectWithoutProperties","setState","Promise","resolve","then","res","_this$state2","client_id","petType","NumberOfTimes90DaysLate","age","MonthlyIncome","NumberRealEstateLoansOrLines","class","Array","fill","join","React","Component","App","src_Insurance","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.908b78bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nfunction shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\nexport default function Score(props) {\n  const { status, data, onSubmit } = props;\n  const btnType = status ? \"secondary\" : \"primary\";\n  const btnText = status\n    ? \"Get recommendation in progress with Brain Pet insurance API ...\"\n    : \"Investigate with Brain Pet insurance API\";\n  const { warnings={} , result={}, explain =[] } = data || {};\n  const { columns_warnings } = warnings||{} ;\n  console.log({data})\n  const suspiciousScore = result.scores && (+result.scores[1].score).toFixed(4);\n  const suspicioussness = result && result.prediction === \"no\";\n  const suspisiousLabel = suspicioussness\n    ? \"Will be interested by a pet insurance \"\n    : \"Won't be interested by a pet insurance\";\n  const badgeClassName =\n    \"badge  badge-\" + (!suspicioussness ? \"danger\" : \"success\");\n  return (\n    <div className=\"align-self-center\">\n      {(!data || (data && (!data.count || data.count)) === 0) && (\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <button\n              type=\"submit\"\n              onSubmit={onSubmit}\n              className={`btn btn-${btnType}`}\n            >\n              {btnText}\n            </button>\n          </div>\n        </div>\n      )}\n      {data && data.count > 0 && (\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">\n              {\" \"}\n              {suspisiousLabel}{\" \"}\n              <span className={badgeClassName}>{suspiciousScore}</span>\n            </h5>\n            <ul className=\"list-group\">\n              {explain //shuffle(Object.keys(props.dataToScore))\n                //.slice(0, 5)\n                .map((key, idx) => {\n                  return (\n                    <li\n                      className=\"list-group-item list-group-item-info\"\n                      key={\"info-\" + key.column} //props.dataToScore[key]}\n                    >\n                      <div\n                        style={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          justifyContent: \"space-between\"\n                        }}\n                      >\n                        <div>\n                          <span>\n                            {\" \"}\n                            {\"Because \"}{\" \"}\n                            <span className=\"badge badge-info\">\n                              {key.column}\n                            </span>{\" \"}\n                            {\" is \"}{\" \"}\n                          </span>\n                          <span className=\"badge badge-info\">\n                            {props.dataToScore[key.column]}\n                          </span>\n                        </div>\n                        <div className=\"progress\" style={{ width: \"30%\" }}>\n                          <div\n                            className=\"progress-bar\"\n                            role=\"progressbar\"\n                            style={{\n                              width:\n                                Math.floor(100 * Math.abs(key.importance)) + \"%\"\n                            }}\n                            aria-valuenow=\"100\"\n                            aria-valuemin=\"0\"\n                            aria-valuemax=\"100\"\n                          />\n                        </div>\n                      </div>\n                    </li>\n                  );\n                })}\n              {false &&\n                Array.isArray(columns_warnings) &&\n                columns_warnings.map(warn => {\n                  return (\n                    <li\n                      className=\"list-group-item list-group-item-warning\"\n                      key={\"warn-\" + warn.column}\n                    >\n                      ⚠️{\" \"}\n                      <span className=\"badge badge-warning\">{warn.column}</span>\n                      {` ` + warn.messages.map(m => m.text).join(\",\")}\n                    </li>\n                  );\n                })}\n            </ul>\n            <hr />\n            <button\n              type=\"button\"\n              onClick={() =>\n                alert(\"Your customer was added to the next campaign\")\n              }\n              className={`btn btn-success`}\n            >\n              Add to campaign\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\nScore.defaultProps = {\n  data: { columns_warnings: [] }\n};\n\n/*\n{ \"columns_warnings\": [ { \"column\": \"counterparty_id_nunique_30days\", \"messages\": [ { \"text\": \"Value [0] is out of training bounds\", \"type\": \"out_of_bounds\" } ] } ], \"global_warnings\": [], \"res\": { \"Set\": null, \"alert_id\": null, \"no_suspicious\": 0.9898505210876465, \"suspicious\": 0.01014946959912777 } }\n\n\n*/\n","import React from \"react\";\nimport defaultData from \"./data.json\";\nimport { callModelAPI } from \"../lib/curl\";\nimport Score from \"./Score\";\n//import defaultRes from \"./res.json\";\nconst defaultRes = {\n  count: \"4\",\n  model_id: \"5d5d6b1b770bf8001b30b340\",\n  psi: {\n    avg_psi: \"null\",\n    classes_psi: \"null\",\n    code: \"psi_not_enough_predictions\",\n    min_examples_psi: \"50\"\n  },\n  result: {\n    prediction: \"no\",\n    scores: [\n      { label: \"no\", score: \"0.9411577582359314\" },\n      { label: \"yes\", score: \"0.05884221941232681\" }\n    ]\n  },\n  warnings: {\n    columns_warnings: [\n      {\n        column: \"age\",\n        messages: [\n          {\n            type: \"empty_value\",\n            text: \"Value is missing but no missing values in the training set\"\n          }\n        ]\n      },\n      {\n        column: \"car_insu_ownership\",\n        messages: [\n          {\n            type: \"empty_value\",\n            text: \"Value is missing but no missing values in the training set\"\n          }\n        ]\n      },\n      {\n        column: \"clien_monthly_income_euros\",\n        messages: [\n          {\n            type: \"empty_value\",\n            text: \"Value is missing but no missing values in the training set\"\n          }\n        ]\n      },\n      {\n        column: \"client_area\",\n        messages: [\n          {\n            type: \"empty_value\",\n            text: \"Value is missing but no missing values in the training set\"\n          }\n        ]\n      },\n      {\n        column: \"client_house_type\",\n        messages: [\n          {\n            type: \"empty_value\",\n            text: \"Value is missing but no missing values in the training set\"\n          }\n        ]\n      },\n      {\n        column: \"client_nb_kids\",\n        messages: [\n          {\n            type: \"empty_value\",\n            text: \"Value is missing but no missing values in the training set\"\n          }\n        ]\n      },\n      {\n        column: \"client_occupation\",\n        messages: [\n          {\n            type: \"empty_value\",\n            text: \"Value is missing but no missing values in the training set\"\n          }\n        ]\n      },\n      {\n        column: \"client_sex\",\n        messages: [\n          {\n            type: \"empty_value\",\n            text: \"Value is missing but no missing values in the training set\"\n          }\n        ]\n      },\n      {\n        column: \"client_town_size\",\n        messages: [\n          {\n            type: \"empty_value\",\n            text: \"Value is missing but no missing values in the training set\"\n          }\n        ]\n      },\n      {\n        column: \"house_insu_ownership\",\n        messages: [\n          {\n            type: \"empty_value\",\n            text: \"Value is missing but no missing values in the training set\"\n          }\n        ]\n      },\n      {\n        column: \"life_insu_ownership\",\n        messages: [\n          {\n            type: \"empty_value\",\n            text: \"Value is missing but no missing values in the training set\"\n          }\n        ]\n      },\n      {\n        column: \"pet_insu_ownership\",\n        messages: [\n          {\n            type: \"empty_value\",\n            text: \"Value is missing but no missing values in the training set\"\n          }\n        ]\n      }\n    ],\n    global_warnings: [\n      {\n        type: \"nan_per_rows\",\n        text:\n          \"You have 19 missing values in your call, this is more than 7 which is the maximum observed number of Nans in the training set. This call might be too sparse.\"\n      }\n    ]\n  },\n  explain: [\n    {\n      column: \"client_sex\",\n      importance: \"0.8070598840713501\",\n      value: \"NaN\"\n    },\n    { column: \"age\", importance: \"-0.562548816204071\", value: \"NaN\" },\n    {\n      column: \"house_insu_ownership\",\n      importance: \"-0.2799532115459442\",\n      value: \"NaN\"\n    },\n    {\n      column: \"life_insu_ownership\",\n      importance: \"-0.20108763873577118\",\n      value: \"NaN\"\n    },\n    {\n      column: \"car_insu_ownership\",\n      importance: \"0.1228892058134079\",\n      value: \"NaN\"\n    }\n  ]\n};\n\nclass Insurance extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...defaultData[4],\n      requestLoading: false,\n      requestData: null\n    };\n    this.submit = this.submit.bind(this);\n  }\n  submit(e) {\n    e.preventDefault();\n    const { requestLoading, requestData, ...dataToScore } = this.state;\n    this.setState({ requestLoading: true, requestData: null }, () => {\n      // callModelAPI(dataToScore)\n      //   .catch(() => defaultRes)\n        Promise.resolve(defaultRes).then(res =>\n          this.setState({\n            requestData: res,\n            requestLoading: false\n          })\n        );\n    });\n  }\n  render() {\n    const { props } = this;\n    const { requestLoading, requestData, ...dataToScore } = this.state;\n    const {\n      client_id,\n      NumberOfTimes90DaysLate,\n      age,\n      MonthlyIncome,\n      NumberRealEstateLoansOrLines,\n      ...otherDataToScore\n    } = dataToScore;\n    const petType = dataToScore[\"pet_type\"];\n    return (\n      <div className=\"container-fluid\">\n        <nav class=\"navbar navbar-dark bg-dark\">\n          <span class=\"navbar-brand mb-0 h1\">Insurance</span>\n          <span class=\"navbar-brand mb-0 h3\">CRM demo Brain API</span>\n        </nav>\n\n        <br />\n        <div>\n          <form onSubmit={this.submit}>\n            <div className=\"row\">\n              <div className=\"col-sm\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">The customer {client_id}</h5>\n                    <p className=\"card-text\">\n                      <p>\n                        {\" \"}\n                        is a {dataToScore[\"client_sex\"] === \"f\"\n                          ? \"🙎🏻‍♀️\"\n                          : \"🙎‍♂️\"}{\" \"}\n                        and speaks{\" \"}\n                        {dataToScore[\"client_language\"] === \"fr\" ? \"🇫🇷\" : \"🇬🇧\"}{\" \"}\n                      </p>\n                      <p>\n                        {\" \"}\n                        is in a <b>\n                          {dataToScore[\"client_marital_status\"]}\n                        </b>{\" \"}\n                        and has{\" \"}\n                        {new Array(+dataToScore[\"client_nb_kids\"])\n                          .fill()\n                          .map(() => \"👶\")\n                          .join(\"\")}{\" \"}\n                        children{\" \"}\n                      </p>\n                      <p>\n                        lives in <b>{dataToScore[\"client_area\"]}</b> in a{\" \"}\n                        <b>{dataToScore[\"client_house_type\"]}</b> in a{\" \"}\n                        <b>{dataToScore[\"client_town_size\"]}</b> city\n                      </p>\n                      <p>\n                        works as a <b>{dataToScore[\"client_occupation\"]}</b> for\n                        an income of{\" \"}\n                        <b>{dataToScore[\"clien_monthly_income_euros\"]}</b> €{\" \"}\n                      </p>\n                      <p>\n                        <b>\n                          {dataToScore[\"sport_practice\"] === \"never\"\n                            ? \"Don't \"\n                            : \"Do\"}\n                        </b>{\" \"}\n                        practice a sport\n                      </p>\n                      <p>\n                        <b>{dataToScore[\"smoker\"] === \"yes\" ? \"🚬\" : \"\"}</b>{\" \"}\n                      </p>\n                    </p>\n                  </div>\n                </div>\n                <br />\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">Insurance products</h5>\n                    <p className=\"card-text\">\n                      <ul className=\"list-group\">\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                          Life insurance{\" \"}\n                          <span\n                            className={`badge badge-${\n                              dataToScore[\"life_insu_ownership\"] === \"yes\"\n                                ? \"primary\"\n                                : \"danger\"\n                            } badge-pill`}\n                          >\n                            {dataToScore[\"life_insu_ownership\"]}\n                          </span>\n                        </li>\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                          Car insurance{\" \"}\n                          <span\n                            className={`badge badge-${\n                              dataToScore[\"car_insu_ownership\"] === \"yes\"\n                                ? \"primary\"\n                                : \"danger\"\n                            } badge-pill`}\n                          >\n                            {dataToScore[\"car_insu_ownership\"]}\n                          </span>\n                        </li>\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                          House insurance{\" \"}\n                          <span\n                            className={`badge badge-${\n                              dataToScore[\"house_insu_ownership\"] === \"yes\"\n                                ? \"primary\"\n                                : \"danger\"\n                            } badge-pill`}\n                          >\n                            {dataToScore[\"house_insu_ownership\"]}\n                          </span>\n                        </li>\n                      </ul>\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-sm\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">Customer Pet</h5>\n                    <p className=\"card-text\">\n                      <p>\n                        Is a {dataToScore[\"pet_type\"] === \"cat\" ? \"😸\" : \"🐶\"}{\" \"}\n                        aged of <b>{dataToScore[\"pet_age\"]}</b>{\" \"}\n                      </p>\n                      <p>\n                        is a <b>{dataToScore[\"pet_\" + petType + \"_race\"]}</b>{\" \"}\n                        named <b>{dataToScore[\"pet_\" + petType + \"_name\"]}</b>\n                      </p>\n                      <p>\n                        <b>\n                          {dataToScore[\"pet_pedigree\"] === \"yes\"\n                            ? \"with\"\n                            : \"without\"}\n                        </b>{\" \"}\n                        pedigree\n                      </p>\n                    </p>\n                  </div>\n                </div>\n                <br />\n                {/*   */}\n\n                <br />\n                <Score\n                  status={this.state.requestLoading}\n                  data={this.state.requestData}\n                  onSubmit={this.submit}\n                  dataToScore={dataToScore}\n                />\n              </div>\n            </div>\n            {/* <div className=\"row\">\n            <pre>\n              <code>{JSON.stringify(defaultData, null, 3)}</code>\n            </pre>\n          </div> */}\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Insurance;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n// import AMLDemo from './AML/demo'\n//import CreditScoring from './CreditScoring'\nimport Insrance from './Insurance'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Insrance />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}